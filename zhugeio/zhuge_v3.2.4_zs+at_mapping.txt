# compiler: R8
# compiler_version: 1.4.94
# min_api: 1
com.zhuge.analysis.stat.CachedBitmap -> com.zhuge.analysis.stat.a:
    android.graphics.Bitmap mCached -> b
    android.graphics.Paint masaicPaint -> d
    android.graphics.Paint mPaint -> c
    float scale -> e
    int mClientDensity -> a
    void drawMosaicInCache(org.json.JSONArray,int) -> a
    java.lang.String getBase64StringFromView(android.view.View,boolean,org.json.JSONArray,int) -> a
    void recreate(int,int,int,android.graphics.Bitmap) -> a
    void tackScreenshot(android.view.View) -> a
com.zhuge.analysis.stat.Constants -> com.zhuge.analysis.stat.b:
    java.lang.String API_ZGSEE_PATH -> g
    java.lang.String API_PATH_BACKUP -> f
    java.lang.String SP_TODAY_COUNT -> i
    java.lang.String SP_LAST_SESSION_TIME -> h
    java.lang.String SP_UPDATE_DEVICE_TIME -> k
    java.lang.String SP_ENABLE_ZGSEE -> j
    java.lang.String SP_CUID -> m
    java.lang.String SP_DID -> l
    long FLUSH_INTERVAL -> b
    java.lang.String SP_SEE_COUNT -> o
    java.lang.String SP_SESSION_COUNT -> n
    int SEND_SIZE -> d
    java.lang.String SP_LAST_PAGE -> p
    java.lang.String SP_FIRST_SCREENSHOT_TIME -> s
    int MAX_LOCAL_SIZE -> c
    java.lang.String SP_MODIFY -> r
    int UPLOAD_LIMIT_SIZE -> a
    java.lang.String API_PATH -> e
    int SESSION_EXCEED -> q
    void configString(java.lang.StringBuilder) -> a
    void loadConfig(android.content.Context) -> a
com.zhuge.analysis.stat.CrashHandler -> com.zhuge.analysis.stat.c:
    com.zhuge.analysis.stat.ZGCore mCore -> c
    com.zhuge.analysis.stat.CrashHandler sInstance -> a
    java.lang.Thread$UncaughtExceptionHandler mDefaultCrashHandler -> b
    com.zhuge.analysis.stat.CrashHandler getInstance() -> a
    void init(com.zhuge.analysis.stat.ZGCore) -> a
com.zhuge.analysis.stat.ZGAppInfo -> com.zhuge.analysis.stat.e:
    java.lang.String RSAMd5 -> G
    java.lang.String myProcessName -> f
    java.lang.String did -> h
    java.lang.String mac -> j
    long firstScreenShotTime -> H
    java.lang.String cuid -> l
    android.telephony.TelephonyManager tm -> p
    int sessionEventCount -> E
    java.lang.String RSA_key -> r
    int serverPolicy -> C
    boolean debug -> s
    java.lang.String apiPath -> v
    java.lang.String apiPathBack -> x
    java.lang.String appKey -> a
    java.lang.String appName -> c
    boolean enableZGSee -> A
    long sessionID -> m
    java.lang.String cr -> e
    java.lang.String packageName -> g
    com.zhuge.analysis.util.ConnectivityUtils connectivityUtils -> o
    java.lang.String imei -> k
    javax.crypto.SecretKey key -> q
    int mosaic -> F
    int sessionSeeCount -> D
    org.json.JSONArray screenSize -> u
    boolean isInMainThread -> t
    java.lang.String ZGSeeUrl -> w
    java.lang.String ZGSeePolicyUrl -> y
    boolean userDefinedEnableZGSee -> z
    long lastSessionActivityTime -> n
    java.lang.String appChannel -> b
    android.content.SharedPreferences globalSP -> i
    boolean localZGSeeState -> B
    java.lang.String appVersion -> d
    org.json.JSONObject buildAutoTrackEvent(org.json.JSONObject) -> a
    com.zhuge.analysis.util.ZGJSONObject buildCustomEvent(java.lang.String,org.json.JSONObject) -> a
    com.zhuge.analysis.util.ZGJSONObject buildDeviceInfo(android.content.Context,boolean) -> a
    com.zhuge.analysis.util.ZGJSONObject buildException(java.lang.Thread,java.lang.Throwable,boolean) -> a
    org.json.JSONObject buildScreenshot(com.zhuge.analysis.stat.ZGCore$ScreenshotInfo) -> a
    org.json.JSONObject buildSeeStart() -> a
    com.zhuge.analysis.util.ZGJSONObject buildSessionStart(java.lang.String) -> a
    com.zhuge.analysis.util.ZGJSONObject channelData(java.lang.String,java.lang.String) -> a
    com.zhuge.analysis.util.ZGJSONObject dealMid(java.lang.String,java.lang.String,int) -> a
    void fillStackTrace(java.lang.StringBuilder,java.lang.Throwable) -> a
    boolean getInfoFromManifest(android.content.Context) -> a
    com.zhuge.analysis.util.ZGJSONObject parseMid(int,com.zhuge.analysis.stat.ZhugeSDK$PushChannel,java.lang.Object) -> a
    void setMosaic(int) -> a
    void setUserDefinedEnableZGSee(boolean) -> a
    void upgradeSharedPrefsFrom(android.content.Context,java.lang.String) -> a
    org.json.JSONObject wrapData(org.json.JSONArray) -> a
    com.zhuge.analysis.util.ZGJSONObject buildIdentify(java.lang.String,org.json.JSONObject) -> b
    com.zhuge.analysis.util.ZGJSONObject buildSessionEnd() -> b
    void initAppInfo(android.content.Context) -> b
    boolean setAppChannel(java.lang.String) -> b
    void setServerPolicy(int) -> b
    com.zhuge.analysis.util.ZGJSONObject buildRevenueEvent(java.lang.String,org.json.JSONObject) -> c
    java.lang.String getAppChannel() -> c
    void initDeviceInfo(android.content.Context) -> c
    boolean setAppKey(java.lang.String) -> c
    java.lang.String getAppKey() -> d
    void initGlobalSettingFile(android.content.Context) -> d
    void setRSAMd5(java.lang.String) -> d
    java.lang.String getDid() -> e
    void upgradeSharedPrefs(android.content.Context) -> e
    android.content.SharedPreferences getGlobalSP() -> f
    long getSessionID() -> g
    boolean isZGSeeEnable() -> h
    void logInitInfo() -> i
    boolean needMosaic() -> j
    boolean updateZGSeeState() -> k
    com.zhuge.analysis.util.ZGJSONObject dataCommon() -> l
    java.lang.String generateDid() -> m
com.zhuge.analysis.stat.ZGAppInfo$1 -> com.zhuge.analysis.stat.d:
    int[] $SwitchMap$com$zhuge$analysis$stat$ZhugeSDK$PushChannel -> a
com.zhuge.analysis.stat.ZGCore -> com.zhuge.analysis.stat.f:
    android.content.Context mContext -> c
    com.zhuge.analysis.stat.ZGAppInfo appInfo -> d
    java.lang.String pageName -> i
    com.zhuge.analysis.stat.ZGCore$ZGWorker zgWorker -> a
    int permissionNet -> h
    int foregroundActivities -> f
    boolean real -> g
    com.zhuge.analysis.stat.ZGCore$ZGHttpWorker zgHttpWorker -> b
    java.util.Map mEventTimings -> e
    android.content.Context access$000(com.zhuge.analysis.stat.ZGCore) -> a
    int access$402(com.zhuge.analysis.stat.ZGCore,int) -> a
    boolean access$502(com.zhuge.analysis.stat.ZGCore,boolean) -> a
    void flush() -> a
    void init(android.content.Context) -> a
    void onEnterForeground(java.lang.String) -> a
    void onException(java.lang.Thread,java.lang.Throwable) -> a
    void sendEventMessage(int,java.lang.String,org.json.JSONObject) -> a
    void sendObjMessage(int,java.lang.Object) -> a
    void sendScreenshot(com.zhuge.analysis.stat.ZGCore$ScreenshotInfo) -> a
    void setScreenSize(int,int) -> a
    java.util.Map access$300(com.zhuge.analysis.stat.ZGCore) -> b
    void onExitForeground(java.lang.String) -> b
    int access$400(com.zhuge.analysis.stat.ZGCore) -> c
    boolean access$500(com.zhuge.analysis.stat.ZGCore) -> d
    com.zhuge.analysis.stat.ZGCore$ZGHttpWorker access$600(com.zhuge.analysis.stat.ZGCore) -> e
    com.zhuge.analysis.stat.ZGCore$ZGWorker access$700(com.zhuge.analysis.stat.ZGCore) -> f
com.zhuge.analysis.stat.ZGCore$EventDescription -> com.zhuge.analysis.stat.f$a:
    org.json.JSONObject properties -> b
    java.lang.String eventName -> a
    java.lang.String access$100(com.zhuge.analysis.stat.ZGCore$EventDescription) -> a
    org.json.JSONObject access$200(com.zhuge.analysis.stat.ZGCore$EventDescription) -> b
com.zhuge.analysis.stat.ZGCore$ScreenshotInfo -> com.zhuge.analysis.stat.f$b:
    java.lang.String pageUrl -> g
    java.lang.String eid -> f
    org.json.JSONArray mosaicViewArray -> i
    long actionTime -> d
    long pageStayTime -> c
    java.lang.String pageName -> b
    java.lang.String screenshot -> e
    double gap -> h
    org.json.JSONArray points -> a
    void setActionTime(long) -> a
    void setEid(java.lang.String) -> a
    void setGap(double) -> a
    void setMosaicViewArray(org.json.JSONArray) -> a
    void setPageName(java.lang.String) -> b
    void setPageStayTime(long) -> b
    void setPoints(org.json.JSONArray) -> b
    void setPageUrl(java.lang.String) -> c
    void setScreenshot(java.lang.String) -> d
com.zhuge.analysis.stat.ZGCore$ZGHttpWorker -> com.zhuge.analysis.stat.f$c:
    com.zhuge.analysis.util.HttpServices httpService -> a
    com.zhuge.analysis.stat.ZGCore this$0 -> b
    void checkAppSee() -> a
    void uploadSDKData(org.json.JSONObject,int,int) -> a
    void uploadZGSee(org.json.JSONObject,int) -> a
com.zhuge.analysis.stat.ZGCore$ZGWorker -> com.zhuge.analysis.stat.f$d:
    com.zhuge.analysis.stat.ZGCore this$0 -> f
    long today_send_count -> e
    long localEventSize -> d
    boolean sdkProcessing -> b
    boolean appSeeProcessing -> c
    com.zhuge.analysis.stat.ZhugeDbAdapter dbAdapter -> a
    int addEvent(org.json.JSONObject) -> a
    void checkAppSeeLocal() -> a
    boolean checkNetwork(boolean) -> a
    int endTrack(com.zhuge.analysis.stat.ZGCore$EventDescription) -> a
    int startNewSessionIfNeed(java.lang.String) -> a
    void addScreenshot(org.json.JSONObject) -> b
    void completeLastSession() -> b
    void startSession(java.lang.String) -> b
    void flushEvent() -> c
    void updateCUID(java.lang.String) -> c
    void updateDeviceInfoTime() -> d
    void updateSessionActivity(java.lang.String) -> d
    void updateTodayCount() -> e
com.zhuge.analysis.stat.ZhugeCallbacks -> com.zhuge.analysis.stat.g:
    int currentSize -> n
    long startTime -> i
    float density -> j
    boolean mosaicIsOk -> o
    long lastDown -> k
    org.json.JSONArray editableTextRects -> m
    com.zhuge.analysis.stat.ZhugeCallbacks$newRecordTouchListener mListener -> f
    java.util.WeakHashMap viewCollection -> h
    boolean keyboardShow -> l
    java.lang.String title -> q
    java.lang.String url -> p
    com.zhuge.analysis.stat.ZGCore mCore -> a
    android.os.Handler mainHandler -> g
    java.lang.reflect.Method getListenerInfo -> c
    android.view.View rootView -> b
    java.lang.String currentActivityUrl -> e
    java.lang.String currentActivityName -> d
    com.zhuge.analysis.stat.ZGCore access$100(com.zhuge.analysis.stat.ZhugeCallbacks) -> a
    long access$1002(com.zhuge.analysis.stat.ZhugeCallbacks,long) -> a
    void addOnTouchListenerForView(android.view.View) -> a
    org.json.JSONArray cloneEditableLocation() -> a
    void traverseRootView(android.view.ViewGroup) -> a
    long access$1000(com.zhuge.analysis.stat.ZhugeCallbacks) -> b
    void detectKeyboardShow() -> b
    void getEditableView(android.view.View) -> b
    java.lang.String access$1100(com.zhuge.analysis.stat.ZhugeCallbacks) -> c
    java.lang.String access$1200(com.zhuge.analysis.stat.ZhugeCallbacks) -> d
    org.json.JSONArray access$1300(com.zhuge.analysis.stat.ZhugeCallbacks) -> e
    java.lang.String access$1400(com.zhuge.analysis.stat.ZhugeCallbacks) -> f
    java.lang.String access$1500(com.zhuge.analysis.stat.ZhugeCallbacks) -> g
    android.os.Handler access$200(com.zhuge.analysis.stat.ZhugeCallbacks) -> h
    boolean access$300(com.zhuge.analysis.stat.ZhugeCallbacks) -> i
    float access$400(com.zhuge.analysis.stat.ZhugeCallbacks) -> j
    boolean access$500(com.zhuge.analysis.stat.ZhugeCallbacks) -> k
    android.view.View access$600(com.zhuge.analysis.stat.ZhugeCallbacks) -> l
    org.json.JSONArray access$700(com.zhuge.analysis.stat.ZhugeCallbacks) -> m
    int access$800(com.zhuge.analysis.stat.ZhugeCallbacks) -> n
    long access$900(com.zhuge.analysis.stat.ZhugeCallbacks) -> o
com.zhuge.analysis.stat.ZhugeCallbacks$newRecordTouchListener -> com.zhuge.analysis.stat.g$a:
    java.lang.String eid -> i
    float lastY -> h
    long dru -> e
    float lastX -> g
    com.zhuge.analysis.stat.ZhugeCallbacks this$0 -> k
    org.json.JSONArray points -> b
    int firstFingerID -> f
    com.zhuge.analysis.stat.CachedBitmap mCachedBitmap -> j
    long actionStart -> c
    java.util.WeakHashMap viewAndListenerMap -> a
    java.lang.String screenshot -> d
    com.zhuge.analysis.stat.CachedBitmap access$000(com.zhuge.analysis.stat.ZhugeCallbacks$newRecordTouchListener) -> a
    void onViewClick(android.view.View) -> a
    void setViewAndListenerMap(android.view.View,android.view.View$OnTouchListener) -> a
com.zhuge.analysis.stat.ZhugeDbAdapter -> com.zhuge.analysis.stat.h:
    com.zhuge.analysis.stat.ZhugeDbAdapter$ZhugeDbHelper mDbHelper -> a
    int addEvent(org.json.JSONObject) -> a
    int addEventToSee(boolean,org.json.JSONObject,long) -> a
    android.util.Pair getData() -> a
    android.util.Pair getDataFromSee(long) -> a
    void removeEvent(java.lang.String) -> a
    void deleteDataFromSeeWithSession(long) -> b
    long getEventCount() -> b
    void removeEventFromSee(java.lang.String) -> b
    long getFirstSession() -> c
    int getSessionCountFromSee() -> d
com.zhuge.analysis.stat.ZhugeDbAdapter$ZhugeDbHelper -> com.zhuge.analysis.stat.h$a:
    java.lang.String mFile -> a
    void deleteDatabase() -> a
com.zhuge.analysis.stat.ZhugeParam$1 -> com.zhuge.analysis.stat.i:
com.zhuge.analysis.stat.ZhugeSDK$1 -> com.zhuge.analysis.stat.j:
com.zhuge.analysis.stat.ZhugeSDK$SingletonHolder -> com.zhuge.analysis.stat.ZhugeSDK$a:
    com.zhuge.analysis.stat.ZhugeSDK instance -> a
    com.zhuge.analysis.stat.ZhugeSDK access$100() -> a
com.zhuge.analysis.util.ActivityServicesUtils -> com.zhuge.analysis.a.a:
    android.app.ActivityManager activityManager -> a
    java.lang.String getMyProcessName() -> a
com.zhuge.analysis.util.AutoTrackUtils -> com.zhuge.analysis.a.b:
    java.lang.Class compatActivity() -> a
    java.lang.String getActivityTitle(android.app.Activity) -> a
    int getChildIndex(android.view.ViewParent,android.view.View) -> a
    java.lang.String getViewIdName(android.view.View) -> a
    boolean hasClassName(java.lang.Object,java.lang.String) -> a
    java.lang.String getToolbarTitle(android.app.Activity) -> b
    java.lang.String getViewPath(android.view.View) -> b
    java.lang.String getViewText(android.view.View) -> c
com.zhuge.analysis.util.ConnectivityUtils -> com.zhuge.analysis.a.c:
    android.net.ConnectivityManager connectivityManager -> a
    int getNetworkType() -> a
    boolean isOnline() -> b
com.zhuge.analysis.util.DeviceInfoUtils -> com.zhuge.analysis.a.d:
    java.lang.String getBrand() -> a
    java.lang.String getResolution(android.content.Context) -> a
    java.lang.String getDevice() -> b
    float[] getScreenDensity(android.content.Context) -> b
    java.lang.String getManfacturer() -> c
    java.lang.String getOSVersion() -> d
com.zhuge.analysis.util.HttpServices -> com.zhuge.analysis.a.f:
    com.zhuge.analysis.util.HttpServices$NullHostNameVerifier mVerifier -> a
    javax.net.ssl.SSLSocketFactory getSSLFactory() -> a
    byte[] sendRequest(java.lang.String,java.lang.String,byte[]) -> a
    byte[] slurp(java.io.InputStream) -> a
com.zhuge.analysis.util.HttpServices$1 -> com.zhuge.analysis.a.e:
    com.zhuge.analysis.util.HttpServices this$0 -> a
com.zhuge.analysis.util.HttpServices$NullHostNameVerifier -> com.zhuge.analysis.a.f$a:
    com.zhuge.analysis.util.HttpServices this$0 -> a
com.zhuge.analysis.util.ManifestUtils -> com.zhuge.analysis.a.g:
    java.lang.String[] getManifestInfo(android.content.Context) -> a
com.zhuge.analysis.util.Utils -> com.zhuge.analysis.a.h:
    java.lang.String publicKey -> a
    java.lang.String AESEncrypt(javax.crypto.SecretKey,byte[]) -> a
    org.json.JSONObject cloneJSONObject(org.json.JSONObject) -> a
    byte[] compress(byte[]) -> a
    javax.crypto.SecretKey getAESKey() -> a
    java.lang.String md5(java.lang.String) -> a
    java.lang.String parseUrl(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String timeStamp2Date(long) -> a
    org.json.JSONObject conversionRevenuePropertiesKey(org.json.JSONObject) -> b
    int getTimeZone() -> b
    java.lang.String publicKeyEncodeRSA(byte[]) -> b
com.zhuge.analysis.util.WifiInfoUtils -> com.zhuge.analysis.a.i:
    android.net.wifi.WifiManager wifiManager -> a
    java.lang.String getMacAddress() -> a
com.zhuge.analysis.util.ZGJSONObject -> com.zhuge.analysis.a.j:
    java.lang.String getCode(com.zhuge.analysis.util.ZGJSONObject) -> a
com.zhuge.analysis.util.ZGLogger -> com.zhuge.analysis.a.k:
    boolean logEnable -> a
    int logLevel -> b
    void handleException(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void logError(java.lang.String,java.lang.String) -> a
    void logVerbose(java.lang.String) -> a
    void openLog() -> a
    void setLogLevel(int) -> a
    void logMessage(java.lang.String,java.lang.String) -> b
